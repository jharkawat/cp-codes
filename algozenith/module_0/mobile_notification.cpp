#include<bits/stdc++.h>
using namespace std;
using ll = long long;

#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

/*
1 X - A new notification is generated by application X
2 X - You read all notifications by application X, you may re-read some notifications
3 Y - You read the first Y notifications in the phone. Note that you donâ€™t read the 
first Y unread notifications, you just read the first Y notifications and you might 
re-read a few notifications. It is guaranteed that there have been Y notifications before this. 
*/


void solve()
{
    ll n,q;
    cin>> n >>q;
    ll last = 0;
    map<ll,vector<ll>> mpp;
    for(ll i=1; i<=q; i++)
    {
        ll a,b;
        cin >> a >> b;
        if(a==1)
        {
            mpp[b].push_back(i);
        }
        else if(a==2)
        {
            mpp[b].clear();
        }
        else if(a==3)
        {
            last = b;
        }
        ll ans = 0;
        for(auto x: mpp)
        {
            ans += x.second.end()-upper_bound(x.second.begin(),x.second.end(),last);
        }
        cout << ans << "\n";

    }
}

signed main()
{
    IOS

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif

    ll t; cin >> t; 
    while(t--)
    {
        solve();
    }
}